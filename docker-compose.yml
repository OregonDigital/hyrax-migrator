version: '3'

volumes:
  redis-dev:

networks:
  external:
  internal:

services:
  ##
  # Basic Rails application build image
  app: &app
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/data # mount current directory into the image
    # use tmpfs for tmp and log for performance and to allow
    # multiple builds in parallel. Both directories are mounted
    # into the image AFTER the working directory is mounted.
    tmpfs:
      - /data/log
    environment:
      - RAILS_ENV=development
      - RAILS_LOG_TO_STDOUT=1
      - REDIS_HOST=redis-dev
      - REDIS_PORT='6379'
      - BROWSEEVERYTHING_FILESYSTEM_PATH=/data/tmp
      - AWS_S3_REGION=awss3region
      - AWS_S3_BUCKET=awss3bucket
      - AWS_S3_APP_KEY=awss3key
      - AWS_S3_APP_SECRET=awsappsecret
    networks:
      external:
      internal:
  server: &server
    <<: *app
    depends_on:
      - redis-dev
      - workers
    command: bash -c "rm -f spec/dummy/tmp/pids/server.pid && bundle exec rails s -b 0.0.0.0"
    expose:
      - 3000
  workers:
    <<: *app
    command: bash -c "./build/install_gems.sh && bundle exec sidekiq -r /data/spec/dummy"
    depends_on:
      - redis-dev
  test:
    <<: *app
    environment:
      - RAILS_ENV=test
      - RAILS_LOG_TO_STDOUT=1
      - REDIS_HOST=redis-test
      - REDIS_PORT='6379'
      - BROWSEEVERYTHING_FILESYSTEM_PATH=/data/tmp
      - AWS_S3_REGION=awss3region
      - AWS_S3_BUCKET=awss3bucket
      - AWS_S3_APP_KEY=awss3key
      - AWS_S3_APP_SECRET=awsappsecret
    depends_on:
      - redis-test
    command: >
      bash -c "rm -f spec/dummy/tmp/pids/server.pid && bundle exec rails s -e test -p 3001"
    expose:
      - 3001
  ##
  # Redis queue server
  redis: &redis
    image: redis:4-alpine
    command: redis-server
    networks:
      internal:
  redis-dev:
    <<: *redis
    volumes:
      - redis-dev:/data
  redis-test:
    <<: *redis
    tmpfs: /data
